/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { useControls } from "leva";
import { useEffect, useRef } from "react";
import { Group, SkinnedMesh } from "three";
import { DissolveMaterial } from "./materials/DissolveMaterial";

interface RacerProps {
  [key: string]: any;
}

export function Racer(props: RacerProps) {
  const group = useRef<Group>(null);
  const { nodes, materials, animations } = useGLTF("/models/racer-opt.glb");
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    actions?.["Armature|mixamo.com|Layer0"]?.play();
  }, [actions]);

  const dissolveMaterialProps = useControls("Dissolve Effect", {
    visible: { value: true },
    size: { value: 12, min: 0, max: 20 },
    thickness: { value: 0.1, min: 0, max: 1 },
    dissolveColor: { value: "orange" },
    intensity: { value: 2, min: 0, max: 10 },
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorig6Hips} />
        </group>
        <skinnedMesh
          name="Ch20"
          geometry={(nodes.Ch20 as SkinnedMesh).geometry}
          // material={materials.Ch20_body}
          skeleton={(nodes.Ch20 as SkinnedMesh).skeleton}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.01}
          castShadow
          receiveShadow
        >
          <DissolveMaterial
            {...materials.Ch20_body}
            {...dissolveMaterialProps}
          />
        </skinnedMesh>
      </group>
    </group>
  );
}

useGLTF.preload("/models/racer-opt.glb");
